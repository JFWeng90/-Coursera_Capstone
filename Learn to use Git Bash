In the Git Bash Terminator:

# to create an SSH key
ssh-keygen -t rsa -b 4096 -C "<your email address>"
# navigate to the .ssh directory, find the two version of your SSH key. “id_rsa” is the private version of your key and “id_rsa.pub” is the public version of your key.
cd ~/.ssh
ls
# add the SSH key to the ssh-agent
## firstly start the ssh-agent, then add the SSH
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa


# Clone the rpository and push to GitHub
1. Clone the rpository
# configure user.email to help git recognize your email address, don not use 'user.name'
git config --global user.email junfeiweng90@gmail.com

# Create a folder named "projects"
mkdir ~/Desktop/projects

# enter the folder projects
cd ~/Desktop/projects

# clone your repository inside the folder
git clone <repository_URL>
# see a new folder with the name of your repository appear in the list of contents of the “projects” directory. 
ls

2. push your commit

# navigate to the cloned repository
cd ~/Desktop/projects/github-example

# after you have a new file in you local repository folder, you have to Update the remote repository or sync it with the local version consists of three steps:
## Staging the changes.
git add python_code.py
git status
## Committing them.
git commit -m <message> ## replace <message> with a brief description that explains what the changes are
## Pushing them to the remote repository.
git push origin master
or 
git push


